# Sniperkit-Bot
# - Status: analyzed

###########################################################################
# Wikidata
#
# This dumps the data on software projects with arch package defined
###########################################################################
- name: wikidata
  type: site
  desc: Wikidata
  family: wikidata
  ruleset: [ arch, aur, wikidata ]
  color: "339966"
  minpackages: 11000
  sources:
    - name: result.json
      fetcher: FileFetcher
      parser: WikidataJsonParser
      url: 'https://query.wikidata.org/sparql'
      post:
        format: json
        query: |
          # SPARQL request to get software information
          #
          # It's nested: while the inner request gathers information
          # for each version of specific software item, outer one aggregates
          # versions for each software project
          #
          # You may paste this into https://query.wikidata.org to play with the query
          SELECT
            ?project
            ?projectLabel
            ?projectDescription
            (
              # concatenate all versions
              GROUP_CONCAT(DISTINCT
                # append flags to each version
                CONCAT(
                  $version,
                  IF(BOUND(?versionTypes), ?versionTypes, ''),
                  IF(BOUND(?versionOSes), ?versionOSes, ''),
                  IF(BOUND(?versionPlatforms), ?versionPlatforms, '')
                ); separator=', '
              )
              AS ?versions
            )
            (SAMPLE(?websites) as ?websites)
            #(SAMPLE(?debian_packages) as ?debian_packages)
            #(SAMPLE(?ubuntu_packages) as ?ubuntu_packages)
            (SAMPLE(?arch_packages) as ?arch_packages)
            (SAMPLE(?aur_packages) as ?aur_packages)
            #(SAMPLE(?gentoo_packages) as ?gentoo_packages)
            #(SAMPLE(?fedora_packages) as ?fedora_packages)
            (SAMPLE(?licenses) as ?licenses)
          WHERE {
            {
              SELECT DISTINCT
                ?project
                ?projectLabel  # produced with wikibase:label SERVICE
                ?projectDescription  # produced with wikibase:label SERVICE
                ?version
                (GROUP_CONCAT(DISTINCT ?versionType; separator='') as ?versionTypes)
                (GROUP_CONCAT(DISTINCT ?versionOS; separator='') as ?versionOSes)
                (GROUP_CONCAT(DISTINCT ?versionPlatform; separator='') as ?versionPlatforms)
                (GROUP_CONCAT(DISTINCT ?website; separator=', ') as ?websites)
                # These are not currently used and disable for speed
                # But you may include them into manual request
                #(GROUP_CONCAT(DISTINCT ?debian_package; separator=', ') as ?debian_packages)
                #(GROUP_CONCAT(DISTINCT ?ubuntu_package; separator=', ') as ?ubuntu_packages)
                (GROUP_CONCAT(DISTINCT ?arch_package; separator=', ') as ?arch_packages)
                (GROUP_CONCAT(DISTINCT ?aur_package; separator=', ') as ?aur_packages)
                #(GROUP_CONCAT(DISTINCT ?gentoo_package; separator=', ') as ?gentoo_packages)
                #(GROUP_CONCAT(DISTINCT ?fedora_package; separator=', ') as ?fedora_packages)
                (GROUP_CONCAT(DISTINCT ?license; separator=', ') as ?licenses)
              WHERE {
                # Versions for specific project
                ?project p:P348 ?versionItem .

                # Version number
                ?versionItem ps:P348 $version .

                # Version type (stable, unstable, ...)
                # we reduce it to just two flags which indicate
                # whether there's stable or unstable types
                OPTIONAL {
                  ?versionItem pq:P548 ?versionTypeItem .
                  BIND(
                    IF(
                      ?versionTypeItem = wd:Q2804309 ||   # stable version
                      ?versionTypeItem = wd:Q15726348 ||  # long-term support version
                      ?versionTypeItem = wd:Q18434478 ||  # maintenance version
                      ?versionTypeItem = wd:Q20631656 ||  # release
                      ?versionTypeItem = wd:Q48028851,    # patch version
                      '|S',
                      '|U'
                    )
                    AS ?versionType
                  )
                  # You may use this in manual request to get label of actual version type
                  #?versionTypeItem rdfs:label ?versionType .
                  #FILTER (LANG(?versionType) = 'en')
                }
                # Version os
                # See VLC package; there's different versioning schemas for different OSes
                # and we need to filter out e.g. iOS releases
                # As with version types, we reduct this to just two flags: where there was
                # Linux release and whether there were non-Linux release. When parsing, we'll
                # ignore versions with OS defined, but no Linux
                OPTIONAL {
                  ?versionItem pq:P306 ?versionOSItem  .
                  BIND(
                    IF(
                      ?versionOSItem = wd:Q388,  # Linux
                      '|O',
                      '|o'
                    )
                    AS ?versionOS
                  )
                  # You may use this in manual request to get label of actual version os
                  #?versionOSItem rdfs:label ?versionOS .
                  #FILTER (LANG(?versionOS) = 'en')
                }
                # same for platform
                # we go blacklist way here though as people use too much unrelated stuff
                # as platform (hardware platforms, operating systems, gui toolkits etc)
                OPTIONAL {
                  ?versionItem pq:P400 ?versionPlatformItem  .
                  BIND(
                    CONCAT(
                      # blacklist
                      IF(
                        ?versionPlatformItem = wd:Q189210 ||   # web application
                        ?versionPlatformItem = wd:Q4885200 ||  # Windows Phone
                        ?versionPlatformItem = wd:Q14116 ||    # macOS
                        ?versionPlatformItem = wd:Q1406 ||     # Microsoft Windows
                        ?versionPlatformItem = wd:Q94 ||       # Android
                        ?versionPlatformItem = wd:Q48493 ||    # iOS
                        ?versionPlatformItem = wd:Q2766 ||     # iPhone
                        ?versionPlatformItem = wd:Q2796,       # iPad
                        '|p',
                        ''
                      ),
                      # whitelist
                      IF(
                        ?versionPlatformItem = wd:Q388,        # Linux
                        '|P',
                        ''
                      )
                    )
                    AS ?versionPlatform
                  )
                  # You may use this in manual request to get label of actual version os
                  #?versionPlatformSItem rdfs:label ?versionPlatform .
                  #FILTER (LANG(?versionPlatform) = 'en')
                }

                # Websites
                OPTIONAL { ?project wdt:P856 ?website . }

                # Licenses, resolved to labels (e.g. human readable names)
                OPTIONAL {
                  ?project wdt:P275 ?licenseItem .
                  ?licenseItem rdfs:label ?license .
                  FILTER (LANG(?license) = 'en')
                }
                #OPTIONAL { ?project wdt:P3442 ?debian_package . }
                #OPTIONAL { ?project wdt:P3473 ?ubuntu_package . }
                OPTIONAL { ?project wdt:P3454 ?arch_package . }
                OPTIONAL { ?project wdt:P4162 ?aur_package . }
                #OPTIONAL { ?project wdt:P3499 ?gentoo_package . }
                #OPTIONAL { ?project wdt:P3463 ?fedora_package . }

                # Require Arch package as we take the name from it
                # Also, without it the query times out as it has to
                # process to much data
                FILTER(BOUND(?arch_package) || BOUND(?aur_package))

                # Provides projectLabel and projectDescription fields
                SERVICE wikibase:label { bd:serviceParam wikibase:language 'en'. }
              }
              GROUP BY ?project ?projectLabel ?projectDescription ?version
            }
          }
          GROUP BY ?project ?projectLabel ?projectDescription
  repolinks:
    - desc: Wikidata home
      url: "https://wikidata.org/"
  packagelinks:
    - desc: Wikidata entity
      url: "https://www.wikidata.org/wiki/{name}"
  tags: [ all, production ]

# Some additional useful requests
#
# - List all software which is available for Linux or Unix-Like OSes with their package names
#   Use this to find missing package names
#
# https://query.wikidata.org/#SELECT%0A %3Fproject%0A %3FprojectLabel%0A (GROUP_CONCAT(DISTINCT %3Farch) AS %3Farch)%0A (GROUP_CONCAT(DISTINCT %3Faur) AS %3Faur)%0A (GROUP_CONCAT(DISTINCT %3Fdebian) AS %3Fdebian)%0A (GROUP_CONCAT(DISTINCT %3Ffedora) AS %3Ffedora)%0A (GROUP_CONCAT(DISTINCT %3Fgentoo) AS %3Fgentoo)%0A (GROUP_CONCAT(DISTINCT %3Fubuntu) AS %3Fubuntu)%0AWHERE {%0A %3Fproject wdt%3AP348 %3Fversion . %23 Require version%0A %3Fproject wdt%3AP306 %3Fos . %23 Require OS%0A %0A FILTER(%3Fos %3D wd%3AQ14646 || %3Fos %3D wd%3AQ388) %23 Require OS to be "Unix-like" or "Linux"%0A%0A OPTIONAL { %3Fproject wdt%3AP3454 %3Farch . }%0A OPTIONAL { %3Fproject wdt%3AP4162 %3Faur . }%0A OPTIONAL { %3Fproject wdt%3AP3442 %3Fdebian . }%0A OPTIONAL { %3Fproject wdt%3AP3463 %3Ffedora . }%0A OPTIONAL { %3Fproject wdt%3AP3499 %3Fgentoo . }%0A OPTIONAL { %3Fproject wdt%3AP3473 %3Fubuntu . }%0A %0A SERVICE wikibase%3Alabel { bd%3AserviceParam wikibase%3Alanguage 'en'. }%0A}%0AGROUP BY %3Fproject %3FprojectLabel%0AORDER BY %3FprojectLabel
#
# - Same, but with some packages missing
# https://query.wikidata.org/#SELECT%0A%20%3Fproject%0A%20%3FprojectLabel%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Farch%29%20AS%20%3Farch%29%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Faur%29%20AS%20%3Faur%29%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Fdebian%29%20AS%20%3Fdebian%29%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Ffedora%29%20AS%20%3Ffedora%29%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Fgentoo%29%20AS%20%3Fgentoo%29%0A%20%28GROUP_CONCAT%28DISTINCT%20%3Fubuntu%29%20AS%20%3Fubuntu%29%0AWHERE%20%7B%0A%20%3Fproject%20wdt%3AP348%20%3Fversion%20.%20%23%20Require%20version%0A%20%3Fproject%20wdt%3AP306%20%3Fos%20.%20%23%20Require%20OS%0A%20%0A%20FILTER%28%3Fos%20%3D%20wd%3AQ14646%20%7C%7C%20%3Fos%20%3D%20wd%3AQ388%29%20%23%20Require%20OS%20to%20be%20%22Unix-like%22%20or%20%22Linux%22%0A%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP3454%20%3Farch%20.%20%7D%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP4162%20%3Faur%20.%20%7D%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP3442%20%3Fdebian%20.%20%7D%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP3463%20%3Ffedora%20.%20%7D%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP3499%20%3Fgentoo%20.%20%7D%0A%20OPTIONAL%20%7B%20%3Fproject%20wdt%3AP3473%20%3Fubuntu%20.%20%7D%0A%0A%20FILTER%28%28%21BOUND%28%3Farch%29%20%26%26%20%21BOUND%28%3Faur%29%29%20%7C%7C%20%21BOUND%28%3Fdebian%29%20%7C%7C%20%21BOUND%28%3Ffedora%29%20%7C%7C%20%21BOUND%28%3Fgentoo%29%20%7C%7C%20%21BOUND%28%3Fubuntu%29%29%0A%20%0A%20SERVICE%20wikibase%3Alabel%20%7B%20bd%3AserviceParam%20wikibase%3Alanguage%20%27en%27.%20%7D%0A%7D%0AGROUP%20BY%20%3Fproject%20%3FprojectLabel%0AORDER%20BY%20%3FprojectLabel
