# Sniperkit-Bot
# - Status: analyzed

language: python
sudo: true
addons:
  postgresql: "10"
  apt:
    packages:
      - postgresql-10
      - postgresql-client-10
      - postgresql-server-dev-10
      #- python3-rpm  # missing on Trusty
env:
  global:
    - PGPORT=5433
    - REPOLOGY_CONFIG=repology-test.conf.default
cache:
  pip: true
  directories:
    - dep-libversion
    - dep-tidy-html5
    - dep-postgresql-libversion
python:
  - 3.6
before_install:
  # install dependencies
  # normally, these are installed from the package manager, but travis uses rotten ubuntu version

  # XXX: building rpm4 is not possible as python3.6 installation in travis is incomplete (no libraries)
  # So instead, we use this hack:
  - touch rpm.py
  #- |-
  #  mkdir -p dep-rpm
  #  (
  #      cd dep-rpm &&
  #      if [ -z "$(ls -A dep-rpm)" ]; then
  #          wget -qO- http://ftp.rpm.org/releases/rpm-4.14.x/rpm-4.14.1.tar.bz2 | tar -x -j -f- --strip-components 1 &&
  #          env PYTHON_CFLAGS="$(python-config --cflags)" PYTHON_LIBS="$(python-config --libs)" ./configure --enable-python --without-lua &&
  #          make
  #      fi &&
  #      sudo make install
  #  )
  - |-
    mkdir -p dep-libversion
    (
        cd dep-libversion &&
        if [ -z "$(ls -A)" ]; then
            wget -qO- https://github.com/repology/libversion/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
            cmake . &&
            make
        fi &&
        sudo make install &&
        sudo ldconfig
    )
  - |-
    mkdir -p dep-html5-tidy
    (
        cd dep-html5-tidy &&
        if [ -z "$(ls -A)" ]; then
            wget -qO- https://github.com/htacg/tidy-html5/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
            cmake . &&
            make
        fi &&
        sudo make install &&
        sudo ldconfig
    )
  - |-
    mkdir -p dep-postgresql-libversion
    (
        cd dep-postgresql-libversion &&
        if [ -z "$(ls -A)" ]; then
            wget -qO- https://github.com/repology/postgresql-libversion/archive/master.tar.gz | tar -x -z -f- --strip-components 1 &&
            make
        fi &&
        sudo make install
    )

  # install mandatory python dependencies
  - pip install Jinja2
  - pip install PyYAML
  - pip install flask
  - pip install libversion
  - pip install lxml
  - pip install pillow
  - pip install psycopg2
  - pip install pytz
  - pip install requests
  - pip install rubymarshal

  # install extra python dependencies
  - pip install coveralls
  - pip install flake8
  - pip install flake8-builtins!=1.1.0
  - pip install flake8-import-order
  - pip install flake8-quotes
  - pip install pytidylib # uses newer libtidy installed above
  - pip install voluptuous

  # get rules
  - git clone --depth=1 https://github.com/sniperkit/snk.fork.repology-rules.git rules.d
before_script:
  - sudo -u postgres psql -c "CREATE DATABASE repology_test;"
  - sudo -u postgres psql -c "CREATE USER repology_test WITH PASSWORD 'repology_test'"
  - sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE repology_test TO repology_test"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS pg_trgm"
  - sudo -u postgres psql -d repology_test -c "CREATE EXTENSION IF NOT EXISTS libversion"
  - echo "BADGE_FONT = '/usr/share/fonts/truetype/ttf-dejavu/DejaVuSans.ttf'" >> repology-test.conf.default
  - sed -i -e 's|dbname=repology_test|& port=5433 host=localhost|' repology-test.conf.default
script:
  # test all target
  - make

  # check yaml schemas
  - make check

  # check python syntax
  - make flake8

  # fill database with test data
  - ./repology-update.py --initdb --parse --database --postupdate

  # smoke test bits
  - ./repology-dump.py --help
  - ./repology-gensitemap.py --main > sitemap-main.xml
  - ./repology-gensitemap.py --metapackages > sitemap-metapackages.xml

  # run unit tests with coverage
  - coverage run --source="repology,repologyapp" --omit="repology/fetchers/*" -m unittest discover

after_success:
  - coveralls
